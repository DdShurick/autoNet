#!/bin/sh
#internet up. DdShurick 12.04.2019, GPL v2

if [ $(/usr/bin/id -u) = 0 ]; then DISPLAY="$(cat /tmp/dsp)"; else loginroot $0; exit; fi

up_func () {
 case $1 in
	modem)
		sed -i "s/modem down/modem up/" /etc/net/interfaces.lck
		up3Gmodem
	;;
	*)
		HWADDR=$(cat /sys/class/net/$1/address) || return 1
		sed -i "s/$HWADDR down/$HWADDR up/" /etc/net/interfaces.lck
		/lib/udev/upNet $1 $HWADDR up
	;;
 esac
}

down_func () {
[ $(pidof wpa_supplicant) ] && kill $(pidof wpa_supplicant)
[ $(pidof wvdial) ] && kill $(pidof wvdial)
[ $(pidof pppd) ] && kill $(pidof pppd)
/sbin/ifconfig $1 down
if [ -h /sys/class/net/$1 ]; then
	HWADDR=$(cat /sys/class/net/$1/address) || return 1
	sed -i "s/$HWADDR up/$HWADDR down/" /etc/net/interfaces.lck
fi
sed -i "s/modem up/modem down/" /etc/net/interfaces.lck 
echo "$1 down"
}

all_off () {
/sbin/route del default
ls -1 /sys/class/net | grep -v lo | while read IFACE
do
	if [ "${IFACE:0:4}" = "wlan" ]; then
		down_func $IFACE
		continue
	fi
	[ "$(cat /sys/class/net/$IFACE/operstate | cut -b1)" = "u" ] && down_func $IFACE
done 
}

echo "export Window='<window icon-name=\"network\" title=\"AutoNet\" resizable=\"false\"><vbox><hbox>" | tee /tmp/connect
#модем
if [ -d /sys/bus/usb-serial/devices/ttyUSB0 -o -d /sys/bus/usb-serial/devices/ttyACM0 ]; then
	if [ "$(pidof pppd)" ]; then
	 ST="подключен"; ACT="down_func"; UD="on"
	else
	 ST="отключен"; ACT="up_func"; UD="off"
	fi
echo "<frame Модем $ST>
 <button>
 	<height>100</height>
 	<input file>/usr/share/pixmaps/usb_modem_${UD}.svg</input>
	<action function=\"exit\">$ACT modem</action>
 </button>
</frame>" | tee -a /tmp/connect
fi

for IFACE in $(ls -1 /sys/class/net)
do
 case $IFACE in
  e*) IMG=network ;;
  wl*|r*) IMG=wireless ;;
  u*|ww*) IMG=usb_modem ;;
  *) continue ;;
 esac
 
if [ "$(cat /sys/class/net/$IFACE/operstate)" = down ]; then
 ACT="up_func"; ST="отключен"; UD="_off"
else
 ACT="down_func"; ST="подключен"; UD="_on"
fi

echo "<frame $IFACE $ST>
 <button>
 	<height>100</height>
 	<input file>/usr/share/pixmaps/${IMG}${UD}.svg</input>
	<action function=\"exit\">$ACT $IFACE</action>
 </button>
</frame>" | tee -a /tmp/connect
done

echo "</hbox>
 <checkbox>
 	<label>Автоматическая настройка сети (DHCP)</label>
 	<default>true</default>
 	<variable>DHCP</variable>
 </checkbox>
</vbox></window>'" | tee -a /tmp/connect
. /tmp/connect
eval $(gtkdialog -c --program "Window")

[ "$EXIT" = "abort" ] && exit
[ "$DHCP" = "false" ] && tunstatic $(echo "$EXIT"|cut -f2 -d' ')
[ "${EXIT:0:3}" = "up_" ] && all_off
$EXIT
exit
